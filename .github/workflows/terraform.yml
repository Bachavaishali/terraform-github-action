name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
    ARM_CLIENT_ID: 50f0c2a9-3ed5-4c8e-97af-7100c39b6811
    ARM_CLIENT_SECRET: y9F8Q~uARShtpTHHhiKCOS4NfPrvM~hvoQKSHbI2
    ARM_SUBSCRIPTION_ID: 6498feeb-1a03-4d38-a1cf-2f21346ef871
    ARM_TENENT_ID: e2998842-9287-4ca9-bfc6-09d7d5aa8407
    ROOT_PATH: '${{ github.workspace }}/src/terraform'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{env.ROOT_PATH}}

   
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan 
      working-directory: ${{env.ROOT_PATH}}

      
